"""
Задача: https://leetcode.com/problems/sqrtx/
Ограничения:
0 <= x <= 2^31 - 1
"""


def mySqrt(x: int) -> int:
    """
    Функция принимает целое число и ищет его квадратный корень, округленный вниз до целого числа
    :param x: квадрат числа
    :return: квадратный корень, округленный вниз до целого
    """
    left, right = 0, x
    while left <= right:
        mid = (right - left) // 2 + left
        if mid * mid > x:
            right = mid - 1
        else:
            left = mid + 1
    return right


# x равен квадрату целого числа
assert (mySqrt(4)) == 2

# ближайший квадрат целого числа меньше x
assert (mySqrt(5)) == 2

# ближайший квадрат целого числа больше x
assert (mySqrt(8)) == 2

# x равен нулю, т.е. имеет единственный корень
assert (mySqrt(0)) == 0

# x равен 1, квадрат числа равен самому числу
assert (mySqrt(1)) == 1

# число и его квадрат имеют одинаковые разряды
assert (mySqrt(10)) == 3

# число и его квадрат имеют разные разряды
assert (mySqrt(16)) == 4

# x равен наибольшему квадрату из условия
assert (mySqrt(46_340**2)) == 46_340

# x равен наибольшему числу из условия
assert (mySqrt(46_341 * 46_341 - 1)) == 46_340
